@dnl = internal constant [4 x i8] c"%d\0A\00"
@d   = internal constant [3 x i8] c"%d\00"
@runtime_error = internal constant [15 x i8] c"runtime error\0A\00"

%struct._IO_FILE = type '{' i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] '}'
%struct._IO_marker = type '{' %struct._IO_marker*, %struct._IO_FILE*, i32 '}'

@stdin = external global %struct._IO_FILE*, align 8

declare i32 @printf(i8*, ...)
declare i32 @scanf(i8*, ...)
declare i8* @strcat(i8*, i8*)
declare i8* @strcpy(i8*, i8*)
declare i8* @malloc(i32)
declare i32 @strlen(i8*)
; declare i8* @readline(i8*)
declare i64 @getline(i8**, i64*, %struct._IO_FILE*)

declare i32 @puts(i8*)
declare i8* @fgets(i8*, i32, %struct._IO_FILE*)
declare void @exit(i32)
declare i32 @strcmp(i8*, i8*)

define void @printInt(i32 %x) '{'
       %t0 = getelementptr [4 x i8], [4 x i8]* @dnl, i32 0, i32 0
       call i32 (i8*, ...) @printf(i8* %t0, i32 %x)
       ret void
'}'


define void @printString(i8* %s) '{'
entry:  call i32 @puts(i8* %s)
	ret void
'}'

define i32 @readInt() '{'
entry:	%res = alloca i32
        %t1 = getelementptr [3 x i8], [3 x i8]* @d, i32 0, i32 0
	call i32 (i8*, ...) @scanf(i8* %t1, i32* %res)
	%t2 = load i32, i32* %res
	ret i32 %t2
'}'

define i8* @readString() '{'
entry:

    %t1 = alloca i8*, align 8
    %t2 = alloca i64, align 8
    %t3 = alloca i64, align 8
    store i8* null, i8** %t1, align 8
    %t4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
    %t5 = call i64 @getline(i8** %t1, i64* %t2,  %struct._IO_FILE* %t4)
    %t6 = load i8*, i8** %t1, align 8
    ret i8* %t6
'}'


define i8* @concat(i8* %s1, i8* %s2) '{'
%1 = call i32 @strlen(i8* %s1)
%2 = call i32 @strlen(i8* %s2)
%3 = add i32 %1, %2
%4 = add i32 %3, 1
%5 = call i8* @malloc(i32 %4)
%6 = call i8* @strcpy(i8* %5, i8* %s1)
%7 = call i8* @strcat(i8* %5, i8* %s2)
ret i8* %7
'}'


define void @error() '{'
    %t0 = getelementptr [15 x i8], [15 x i8]* @runtime_error, i32 0, i32 0
    call void @printString(i8* %t0)
    call void @exit(i32 1)
    ret void
'}'

{0}