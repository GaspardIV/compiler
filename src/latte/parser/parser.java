
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package latte.parser;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\133\000\002\002\004\000\002\002\003\000\002\003" +
    "\010\000\002\003\005\000\002\003\007\000\002\004\003" +
    "\000\002\004\004\000\002\005\004\000\002\006\002\000" +
    "\002\006\003\000\002\006\005\000\002\007\005\000\002" +
    "\010\005\000\002\010\010\000\002\011\003\000\002\012" +
    "\003\000\002\012\005\000\002\013\002\000\002\013\004" +
    "\000\002\014\005\000\002\015\002\000\002\015\004\000" +
    "\002\016\003\000\002\016\003\000\002\016\005\000\002" +
    "\016\006\000\002\016\011\000\002\016\010\000\002\016" +
    "\005\000\002\016\005\000\002\016\005\000\002\016\004" +
    "\000\002\016\007\000\002\016\011\000\002\016\007\000" +
    "\002\016\011\000\002\016\004\000\002\017\003\000\002" +
    "\017\005\000\002\020\003\000\002\020\005\000\002\021" +
    "\003\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\004\000\002\022\002\000" +
    "\002\022\003\000\002\022\005\000\002\023\007\000\002" +
    "\023\006\000\002\023\006\000\002\023\003\000\002\023" +
    "\004\000\002\023\010\000\002\023\005\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\023\006\000\002\023\003\000\002\023\005\000\002" +
    "\024\004\000\002\024\004\000\002\024\003\000\002\025" +
    "\005\000\002\025\003\000\002\026\005\000\002\026\003" +
    "\000\002\027\005\000\002\027\003\000\002\030\005\000" +
    "\002\030\003\000\002\031\005\000\002\031\003\000\002" +
    "\032\002\000\002\032\003\000\002\032\005\000\002\033" +
    "\003\000\002\033\003\000\002\034\003\000\002\034\003" +
    "\000\002\034\003\000\002\035\003\000\002\035\003\000" +
    "\002\035\003\000\002\035\003\000\002\035\003\000\002" +
    "\035\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\250\000\016\040\010\041\005\047\015\053\013\055" +
    "\014\061\012\001\002\000\006\021\034\061\246\001\002" +
    "\000\004\061\020\001\002\000\004\002\017\001\002\000" +
    "\004\002\000\001\002\000\010\013\uffd6\021\uffd6\061\uffd6" +
    "\001\002\000\020\002\ufffc\040\010\041\005\047\015\053" +
    "\013\055\014\061\012\001\002\000\006\021\uffd4\061\uffd4" +
    "\001\002\000\010\013\uffd7\021\uffd7\061\uffd7\001\002\000" +
    "\010\013\uffd5\021\uffd5\061\uffd5\001\002\000\010\013\uffd8" +
    "\021\uffd8\061\uffd8\001\002\000\004\002\ufffb\001\002\000" +
    "\004\002\001\001\002\000\006\007\022\043\023\001\002" +
    "\000\020\002\ufffe\040\ufffe\041\ufffe\047\ufffe\053\ufffe\055" +
    "\ufffe\061\ufffe\001\002\000\016\010\ufff0\040\ufff0\047\ufff0" +
    "\053\ufff0\055\ufff0\061\ufff0\001\002\000\004\061\024\001" +
    "\002\000\004\007\022\001\002\000\020\002\ufffd\040\ufffd" +
    "\041\ufffd\047\ufffd\053\ufffd\055\ufffd\061\ufffd\001\002\000" +
    "\016\010\027\040\010\047\015\053\013\055\014\061\012" +
    "\001\002\000\020\002\ufff6\040\ufff6\041\ufff6\047\ufff6\053" +
    "\ufff6\055\ufff6\061\ufff6\001\002\000\006\021\034\061\032" +
    "\001\002\000\016\010\uffef\040\uffef\047\uffef\053\uffef\055" +
    "\uffef\061\uffef\001\002\000\010\004\042\006\ufff3\011\ufff3" +
    "\001\002\000\006\006\037\011\ufff2\001\002\000\010\013" +
    "\uffd3\021\uffd3\061\uffd3\001\002\000\004\011\036\001\002" +
    "\000\016\010\ufff5\040\ufff5\047\ufff5\053\ufff5\055\ufff5\061" +
    "\ufff5\001\002\000\004\061\040\001\002\000\006\006\ufff3" +
    "\011\ufff3\001\002\000\004\011\ufff1\001\002\000\016\005" +
    "\ufff9\040\010\047\015\053\013\055\014\061\012\001\002" +
    "\000\006\021\034\061\245\001\002\000\006\005\ufff8\006" +
    "\243\001\002\000\004\005\046\001\002\000\004\007\047" +
    "\001\002\000\054\004\uffed\007\uffed\010\uffed\011\uffed\022" +
    "\uffed\023\uffed\040\uffed\044\uffed\045\uffed\046\uffed\047\uffed" +
    "\050\uffed\051\uffed\052\uffed\053\uffed\054\uffed\055\uffed\056" +
    "\uffed\057\uffed\060\uffed\061\uffed\001\002\000\016\010\ufff4" +
    "\040\ufff4\047\ufff4\053\ufff4\055\ufff4\061\ufff4\001\002\000" +
    "\054\004\100\007\047\010\077\011\076\022\072\023\070" +
    "\040\010\044\063\045\057\046\055\047\015\050\053\051" +
    "\103\052\102\053\013\054\075\055\014\056\074\057\054" +
    "\060\052\061\062\001\002\000\052\005\uffc7\006\uffc7\011" +
    "\uffc7\014\uffc7\015\uffc7\016\uffc7\017\uffc7\022\uffc7\024\uffc7" +
    "\025\uffc7\026\uffc7\027\uffc7\030\uffc7\031\uffc7\032\uffc7\033" +
    "\uffc7\034\uffc7\035\uffc7\036\uffc7\037\uffc7\001\002\000\014" +
    "\040\010\047\015\053\013\055\014\061\237\001\002\000" +
    "\052\005\uffc3\006\uffc3\011\uffc3\014\uffc3\015\uffc3\016\uffc3" +
    "\017\uffc3\022\uffc3\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030" +
    "\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035\uffc3\036\uffc3" +
    "\037\uffc3\001\002\000\004\004\230\001\002\000\044\011" +
    "\uffbf\015\223\016\uffbf\017\uffbf\022\uffbf\024\uffbf\025\uffbf" +
    "\026\uffbf\027\uffbf\030\uffbf\031\uffbf\032\uffbf\033\uffbf\034" +
    "\uffbf\035\uffbf\036\uffbf\037\uffbf\001\002\000\004\004\215" +
    "\001\002\000\050\005\uffbd\006\uffbd\011\uffbd\014\uffbd\016" +
    "\uffbd\017\uffbd\022\uffbd\024\uffbd\025\uffbd\026\uffbd\027\uffbd" +
    "\030\uffbd\031\uffbd\032\uffbd\033\uffbd\034\uffbd\035\uffbd\036" +
    "\uffbd\037\uffbd\001\002\000\050\005\uffbb\006\uffbb\011\uffbb" +
    "\014\uffbb\016\uffbb\017\uffbb\022\uffbb\024\uffbb\025\uffbb\026" +
    "\uffbb\027\201\030\200\031\177\032\uffbb\033\uffbb\034\uffbb" +
    "\035\uffbb\036\uffbb\037\uffbb\001\002\000\056\004\111\011" +
    "\uffc8\012\205\013\204\015\uffc8\016\uffc8\017\uffc8\021\uffd4" +
    "\022\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030\uffc8\031" +
    "\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8\036\uffc8\037\uffc8" +
    "\061\uffd4\001\002\000\052\005\uffc5\006\uffc5\011\uffc5\014" +
    "\uffc5\015\uffc5\016\uffc5\017\uffc5\022\uffc5\024\uffc5\025\uffc5" +
    "\026\uffc5\027\uffc5\030\uffc5\031\uffc5\032\uffc5\033\uffc5\034" +
    "\uffc5\035\uffc5\036\uffc5\037\uffc5\001\002\000\042\005\uffb9" +
    "\006\uffb9\011\uffb9\014\uffb9\016\uffb9\017\uffb9\022\174\024" +
    "\uffb9\025\uffb9\026\173\032\uffb9\033\uffb9\034\uffb9\035\uffb9" +
    "\036\uffb9\037\uffb9\001\002\000\036\005\uffb7\006\uffb7\011" +
    "\uffb7\014\uffb7\016\uffb7\017\uffb7\024\163\025\uffb7\032\161" +
    "\033\170\034\167\035\166\036\165\037\164\001\002\000" +
    "\054\004\uffec\007\uffec\010\uffec\011\uffec\022\uffec\023\uffec" +
    "\040\uffec\044\uffec\045\uffec\046\uffec\047\uffec\050\uffec\051" +
    "\uffec\052\uffec\053\uffec\054\uffec\055\uffec\056\uffec\057\uffec" +
    "\060\uffec\061\uffec\001\002\000\020\005\uffb5\006\uffb5\011" +
    "\uffb5\014\uffb5\016\uffb5\017\uffb5\025\157\001\002\000\022" +
    "\004\100\044\063\050\053\051\103\054\075\057\054\060" +
    "\052\061\105\001\002\000\010\011\152\016\151\017\153" +
    "\001\002\000\022\004\100\044\063\050\053\051\103\054" +
    "\075\057\054\060\052\061\105\001\002\000\006\021\034" +
    "\061\141\001\002\000\004\004\134\001\002\000\052\005" +
    "\uffc6\006\uffc6\011\uffc6\014\uffc6\015\uffc6\016\uffc6\017\uffc6" +
    "\022\uffc6\024\uffc6\025\uffc6\026\uffc6\027\uffc6\030\uffc6\031" +
    "\uffc6\032\uffc6\033\uffc6\034\uffc6\035\uffc6\036\uffc6\037\uffc6" +
    "\001\002\000\056\004\uffeb\007\uffeb\010\uffeb\011\uffeb\022" +
    "\uffeb\023\uffeb\040\uffeb\042\uffeb\044\uffeb\045\uffeb\046\uffeb" +
    "\047\uffeb\050\uffeb\051\uffeb\052\uffeb\053\uffeb\054\uffeb\055" +
    "\uffeb\056\uffeb\057\uffeb\060\uffeb\061\uffeb\001\002\000\062" +
    "\002\uffee\004\uffee\007\uffee\010\uffee\011\uffee\022\uffee\023" +
    "\uffee\040\uffee\041\uffee\042\uffee\044\uffee\045\uffee\046\uffee" +
    "\047\uffee\050\uffee\051\uffee\052\uffee\053\uffee\054\uffee\055" +
    "\uffee\056\uffee\057\uffee\060\uffee\061\uffee\001\002\000\026" +
    "\004\100\022\072\023\070\044\063\050\053\051\103\054" +
    "\075\057\054\060\052\061\130\001\002\000\056\004\uffea" +
    "\007\uffea\010\uffea\011\uffea\022\uffea\023\uffea\040\uffea\042" +
    "\uffea\044\uffea\045\uffea\046\uffea\047\uffea\050\uffea\051\uffea" +
    "\052\uffea\053\uffea\054\uffea\055\uffea\056\uffea\057\uffea\060" +
    "\uffea\061\uffea\001\002\000\030\004\100\011\107\022\072" +
    "\023\070\044\063\050\053\051\103\054\075\057\054\060" +
    "\052\061\105\001\002\000\052\005\uffcc\006\uffcc\011\uffcc" +
    "\014\uffcc\015\uffcc\016\uffcc\017\uffcc\022\uffcc\024\uffcc\025" +
    "\uffcc\026\uffcc\027\uffcc\030\uffcc\031\uffcc\032\uffcc\033\uffcc" +
    "\034\uffcc\035\uffcc\036\uffcc\037\uffcc\001\002\000\052\005" +
    "\uffbf\006\uffbf\011\uffbf\014\uffbf\015\122\016\uffbf\017\uffbf" +
    "\022\uffbf\024\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031" +
    "\uffbf\032\uffbf\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037\uffbf" +
    "\001\002\000\056\004\111\005\uffc8\006\uffc8\011\uffc8\013" +
    "\112\014\uffc8\015\uffc8\016\uffc8\017\uffc8\022\uffc8\024\uffc8" +
    "\025\uffc8\026\uffc8\027\uffc8\030\uffc8\031\uffc8\032\uffc8\033" +
    "\uffc8\034\uffc8\035\uffc8\036\uffc8\037\uffc8\001\002\000\004" +
    "\011\110\001\002\000\056\004\uffe2\007\uffe2\010\uffe2\011" +
    "\uffe2\022\uffe2\023\uffe2\040\uffe2\042\uffe2\044\uffe2\045\uffe2" +
    "\046\uffe2\047\uffe2\050\uffe2\051\uffe2\052\uffe2\053\uffe2\054" +
    "\uffe2\055\uffe2\056\uffe2\057\uffe2\060\uffe2\061\uffe2\001\002" +
    "\000\056\004\uffe3\007\uffe3\010\uffe3\011\uffe3\022\uffe3\023" +
    "\uffe3\040\uffe3\042\uffe3\044\uffe3\045\uffe3\046\uffe3\047\uffe3" +
    "\050\uffe3\051\uffe3\052\uffe3\053\uffe3\054\uffe3\055\uffe3\056" +
    "\uffe3\057\uffe3\060\uffe3\061\uffe3\001\002\000\030\004\100" +
    "\005\uffb4\022\072\023\070\044\063\050\053\051\103\054" +
    "\075\057\054\060\052\061\105\001\002\000\026\004\100" +
    "\022\072\023\070\044\063\050\053\051\103\054\075\057" +
    "\054\060\052\061\105\001\002\000\004\014\114\001\002" +
    "\000\052\005\uffce\006\uffce\011\uffce\014\uffce\015\uffce\016" +
    "\uffce\017\uffce\022\uffce\024\uffce\025\uffce\026\uffce\027\uffce" +
    "\030\uffce\031\uffce\032\uffce\033\uffce\034\uffce\035\uffce\036" +
    "\uffce\037\uffce\001\002\000\006\005\uffb3\006\120\001\002" +
    "\000\004\005\117\001\002\000\052\005\uffc4\006\uffc4\011" +
    "\uffc4\014\uffc4\015\uffc4\016\uffc4\017\uffc4\022\uffc4\024\uffc4" +
    "\025\uffc4\026\uffc4\027\uffc4\030\uffc4\031\uffc4\032\uffc4\033" +
    "\uffc4\034\uffc4\035\uffc4\036\uffc4\037\uffc4\001\002\000\030" +
    "\004\100\005\uffb4\022\072\023\070\044\063\050\053\051" +
    "\103\054\075\057\054\060\052\061\105\001\002\000\004" +
    "\005\uffb2\001\002\000\004\061\123\001\002\000\054\004" +
    "\124\005\uffc9\006\uffc9\011\uffc9\014\uffc9\015\uffc9\016\uffc9" +
    "\017\uffc9\022\uffc9\024\uffc9\025\uffc9\026\uffc9\027\uffc9\030" +
    "\uffc9\031\uffc9\032\uffc9\033\uffc9\034\uffc9\035\uffc9\036\uffc9" +
    "\037\uffc9\001\002\000\030\004\100\005\uffb4\022\072\023" +
    "\070\044\063\050\053\051\103\054\075\057\054\060\052" +
    "\061\105\001\002\000\004\005\126\001\002\000\052\005" +
    "\uffca\006\uffca\011\uffca\014\uffca\015\uffca\016\uffca\017\uffca" +
    "\022\uffca\024\uffca\025\uffca\026\uffca\027\uffca\030\uffca\031" +
    "\uffca\032\uffca\033\uffca\034\uffca\035\uffca\036\uffca\037\uffca" +
    "\001\002\000\004\005\133\001\002\000\044\004\111\005" +
    "\131\013\112\015\uffc8\022\uffc8\024\uffc8\025\uffc8\026\uffc8" +
    "\027\uffc8\030\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035" +
    "\uffc8\036\uffc8\037\uffc8\001\002\000\004\051\132\001\002" +
    "\000\052\005\uffcd\006\uffcd\011\uffcd\014\uffcd\015\uffcd\016" +
    "\uffcd\017\uffcd\022\uffcd\024\uffcd\025\uffcd\026\uffcd\027\uffcd" +
    "\030\uffcd\031\uffcd\032\uffcd\033\uffcd\034\uffcd\035\uffcd\036" +
    "\uffcd\037\uffcd\001\002\000\052\005\uffc2\006\uffc2\011\uffc2" +
    "\014\uffc2\015\uffc2\016\uffc2\017\uffc2\022\uffc2\024\uffc2\025" +
    "\uffc2\026\uffc2\027\uffc2\030\uffc2\031\uffc2\032\uffc2\033\uffc2" +
    "\034\uffc2\035\uffc2\036\uffc2\037\uffc2\001\002\000\026\004" +
    "\100\022\072\023\070\044\063\050\053\051\103\054\075" +
    "\057\054\060\052\061\105\001\002\000\004\005\136\001" +
    "\002\000\052\004\100\007\047\011\076\022\072\023\070" +
    "\040\010\044\063\045\057\046\055\047\015\050\053\051" +
    "\103\052\102\053\013\054\075\055\014\056\074\057\054" +
    "\060\052\061\062\001\002\000\056\004\uffdf\007\uffdf\010" +
    "\uffdf\011\uffdf\022\uffdf\023\uffdf\040\uffdf\042\uffdf\044\uffdf" +
    "\045\uffdf\046\uffdf\047\uffdf\050\uffdf\051\uffdf\052\uffdf\053" +
    "\uffdf\054\uffdf\055\uffdf\056\uffdf\057\uffdf\060\uffdf\061\uffdf" +
    "\001\002\000\006\006\146\011\uffda\001\002\000\010\006" +
    "\uffdc\011\uffdc\012\144\001\002\000\004\011\143\001\002" +
    "\000\056\004\uffe9\007\uffe9\010\uffe9\011\uffe9\022\uffe9\023" +
    "\uffe9\040\uffe9\042\uffe9\044\uffe9\045\uffe9\046\uffe9\047\uffe9" +
    "\050\uffe9\051\uffe9\052\uffe9\053\uffe9\054\uffe9\055\uffe9\056" +
    "\uffe9\057\uffe9\060\uffe9\061\uffe9\001\002\000\026\004\100" +
    "\022\072\023\070\044\063\050\053\051\103\054\075\057" +
    "\054\060\052\061\105\001\002\000\006\006\uffdb\011\uffdb" +
    "\001\002\000\004\061\141\001\002\000\004\011\uffd9\001" +
    "\002\000\052\005\uffc1\006\uffc1\011\uffc1\014\uffc1\015\122" +
    "\016\uffc1\017\uffc1\022\uffc1\024\uffc1\025\uffc1\026\uffc1\027" +
    "\uffc1\030\uffc1\031\uffc1\032\uffc1\033\uffc1\034\uffc1\035\uffc1" +
    "\036\uffc1\037\uffc1\001\002\000\004\011\155\001\002\000" +
    "\056\004\uffdd\007\uffdd\010\uffdd\011\uffdd\022\uffdd\023\uffdd" +
    "\040\uffdd\042\uffdd\044\uffdd\045\uffdd\046\uffdd\047\uffdd\050" +
    "\uffdd\051\uffdd\052\uffdd\053\uffdd\054\uffdd\055\uffdd\056\uffdd" +
    "\057\uffdd\060\uffdd\061\uffdd\001\002\000\004\011\154\001" +
    "\002\000\056\004\uffe4\007\uffe4\010\uffe4\011\uffe4\022\uffe4" +
    "\023\uffe4\040\uffe4\042\uffe4\044\uffe4\045\uffe4\046\uffe4\047" +
    "\uffe4\050\uffe4\051\uffe4\052\uffe4\053\uffe4\054\uffe4\055\uffe4" +
    "\056\uffe4\057\uffe4\060\uffe4\061\uffe4\001\002\000\056\004" +
    "\uffe5\007\uffe5\010\uffe5\011\uffe5\022\uffe5\023\uffe5\040\uffe5" +
    "\042\uffe5\044\uffe5\045\uffe5\046\uffe5\047\uffe5\050\uffe5\051" +
    "\uffe5\052\uffe5\053\uffe5\054\uffe5\055\uffe5\056\uffe5\057\uffe5" +
    "\060\uffe5\061\uffe5\001\002\000\052\005\uffc0\006\uffc0\011" +
    "\uffc0\014\uffc0\015\122\016\uffc0\017\uffc0\022\uffc0\024\uffc0" +
    "\025\uffc0\026\uffc0\027\uffc0\030\uffc0\031\uffc0\032\uffc0\033" +
    "\uffc0\034\uffc0\035\uffc0\036\uffc0\037\uffc0\001\002\000\026" +
    "\004\100\022\072\023\070\044\063\050\053\051\103\054" +
    "\075\057\054\060\052\061\105\001\002\000\016\005\uffb6" +
    "\006\uffb6\011\uffb6\014\uffb6\016\uffb6\017\uffb6\001\002\000" +
    "\026\004\uffac\022\uffac\023\uffac\044\uffac\050\uffac\051\uffac" +
    "\054\uffac\057\uffac\060\uffac\061\uffac\001\002\000\026\004" +
    "\100\022\072\023\070\044\063\050\053\051\103\054\075" +
    "\057\054\060\052\061\105\001\002\000\026\004\100\022" +
    "\072\023\070\044\063\050\053\051\103\054\075\057\054" +
    "\060\052\061\105\001\002\000\026\004\uffa7\022\uffa7\023" +
    "\uffa7\044\uffa7\050\uffa7\051\uffa7\054\uffa7\057\uffa7\060\uffa7" +
    "\061\uffa7\001\002\000\026\004\uffa8\022\uffa8\023\uffa8\044" +
    "\uffa8\050\uffa8\051\uffa8\054\uffa8\057\uffa8\060\uffa8\061\uffa8" +
    "\001\002\000\026\004\uffa9\022\uffa9\023\uffa9\044\uffa9\050" +
    "\uffa9\051\uffa9\054\uffa9\057\uffa9\060\uffa9\061\uffa9\001\002" +
    "\000\026\004\uffaa\022\uffaa\023\uffaa\044\uffaa\050\uffaa\051" +
    "\uffaa\054\uffaa\057\uffaa\060\uffaa\061\uffaa\001\002\000\026" +
    "\004\uffab\022\uffab\023\uffab\044\uffab\050\uffab\051\uffab\054" +
    "\uffab\057\uffab\060\uffab\061\uffab\001\002\000\020\005\uffb8" +
    "\006\uffb8\011\uffb8\014\uffb8\016\uffb8\017\uffb8\025\uffb8\001" +
    "\002\000\042\005\uffba\006\uffba\011\uffba\014\uffba\016\uffba" +
    "\017\uffba\022\174\024\uffba\025\uffba\026\173\032\uffba\033" +
    "\uffba\034\uffba\035\uffba\036\uffba\037\uffba\001\002\000\026" +
    "\004\uffb1\022\uffb1\023\uffb1\044\uffb1\050\uffb1\051\uffb1\054" +
    "\uffb1\057\uffb1\060\uffb1\061\uffb1\001\002\000\026\004\uffb0" +
    "\022\uffb0\023\uffb0\044\uffb0\050\uffb0\051\uffb0\054\uffb0\057" +
    "\uffb0\060\uffb0\061\uffb0\001\002\000\026\004\100\022\072" +
    "\023\070\044\063\050\053\051\103\054\075\057\054\060" +
    "\052\061\105\001\002\000\050\005\uffbc\006\uffbc\011\uffbc" +
    "\014\uffbc\016\uffbc\017\uffbc\022\uffbc\024\uffbc\025\uffbc\026" +
    "\uffbc\027\201\030\200\031\177\032\uffbc\033\uffbc\034\uffbc" +
    "\035\uffbc\036\uffbc\037\uffbc\001\002\000\026\004\uffad\022" +
    "\uffad\023\uffad\044\uffad\050\uffad\051\uffad\054\uffad\057\uffad" +
    "\060\uffad\061\uffad\001\002\000\026\004\uffae\022\uffae\023" +
    "\uffae\044\uffae\050\uffae\051\uffae\054\uffae\057\uffae\060\uffae" +
    "\061\uffae\001\002\000\026\004\uffaf\022\uffaf\023\uffaf\044" +
    "\uffaf\050\uffaf\051\uffaf\054\uffaf\057\uffaf\060\uffaf\061\uffaf" +
    "\001\002\000\026\004\100\022\072\023\070\044\063\050" +
    "\053\051\103\054\075\057\054\060\052\061\105\001\002" +
    "\000\050\005\uffbe\006\uffbe\011\uffbe\014\uffbe\016\uffbe\017" +
    "\uffbe\022\uffbe\024\uffbe\025\uffbe\026\uffbe\027\uffbe\030\uffbe" +
    "\031\uffbe\032\uffbe\033\uffbe\034\uffbe\035\uffbe\036\uffbe\037" +
    "\uffbe\001\002\000\026\004\100\022\072\023\070\044\063" +
    "\050\053\051\103\054\075\057\054\060\052\061\105\001" +
    "\002\000\026\004\100\022\072\023\070\044\063\050\053" +
    "\051\103\054\075\057\054\060\052\061\105\001\002\000" +
    "\004\011\207\001\002\000\056\004\uffe8\007\uffe8\010\uffe8" +
    "\011\uffe8\022\uffe8\023\uffe8\040\uffe8\042\uffe8\044\uffe8\045" +
    "\uffe8\046\uffe8\047\uffe8\050\uffe8\051\uffe8\052\uffe8\053\uffe8" +
    "\054\uffe8\055\uffe8\056\uffe8\057\uffe8\060\uffe8\061\uffe8\001" +
    "\002\000\004\014\211\001\002\000\046\011\uffce\012\212" +
    "\015\uffce\016\uffce\017\uffce\022\uffce\024\uffce\025\uffce\026" +
    "\uffce\027\uffce\030\uffce\031\uffce\032\uffce\033\uffce\034\uffce" +
    "\035\uffce\036\uffce\037\uffce\001\002\000\026\004\100\022" +
    "\072\023\070\044\063\050\053\051\103\054\075\057\054" +
    "\060\052\061\105\001\002\000\004\011\214\001\002\000" +
    "\056\004\uffe7\007\uffe7\010\uffe7\011\uffe7\022\uffe7\023\uffe7" +
    "\040\uffe7\042\uffe7\044\uffe7\045\uffe7\046\uffe7\047\uffe7\050" +
    "\uffe7\051\uffe7\052\uffe7\053\uffe7\054\uffe7\055\uffe7\056\uffe7" +
    "\057\uffe7\060\uffe7\061\uffe7\001\002\000\014\040\010\047" +
    "\015\053\013\055\014\061\012\001\002\000\004\020\217" +
    "\001\002\000\026\004\100\022\072\023\070\044\063\050" +
    "\053\051\103\054\075\057\054\060\052\061\105\001\002" +
    "\000\004\005\221\001\002\000\052\004\100\007\047\011" +
    "\076\022\072\023\070\040\010\044\063\045\057\046\055" +
    "\047\015\050\053\051\103\052\102\053\013\054\075\055" +
    "\014\056\074\057\054\060\052\061\062\001\002\000\056" +
    "\004\uffde\007\uffde\010\uffde\011\uffde\022\uffde\023\uffde\040" +
    "\uffde\042\uffde\044\uffde\045\uffde\046\uffde\047\uffde\050\uffde" +
    "\051\uffde\052\uffde\053\uffde\054\uffde\055\uffde\056\uffde\057" +
    "\uffde\060\uffde\061\uffde\001\002\000\004\061\224\001\002" +
    "\000\050\004\124\011\uffc9\012\225\015\uffc9\016\uffc9\017" +
    "\uffc9\022\uffc9\024\uffc9\025\uffc9\026\uffc9\027\uffc9\030\uffc9" +
    "\031\uffc9\032\uffc9\033\uffc9\034\uffc9\035\uffc9\036\uffc9\037" +
    "\uffc9\001\002\000\026\004\100\022\072\023\070\044\063" +
    "\050\053\051\103\054\075\057\054\060\052\061\105\001" +
    "\002\000\004\011\227\001\002\000\056\004\uffe6\007\uffe6" +
    "\010\uffe6\011\uffe6\022\uffe6\023\uffe6\040\uffe6\042\uffe6\044" +
    "\uffe6\045\uffe6\046\uffe6\047\uffe6\050\uffe6\051\uffe6\052\uffe6" +
    "\053\uffe6\054\uffe6\055\uffe6\056\uffe6\057\uffe6\060\uffe6\061" +
    "\uffe6\001\002\000\026\004\100\022\072\023\070\044\063" +
    "\050\053\051\103\054\075\057\054\060\052\061\105\001" +
    "\002\000\004\005\232\001\002\000\052\004\100\007\047" +
    "\011\076\022\072\023\070\040\010\044\063\045\057\046" +
    "\055\047\015\050\053\051\103\052\102\053\013\054\075" +
    "\055\014\056\074\057\054\060\052\061\062\001\002\000" +
    "\056\004\uffe1\007\uffe1\010\uffe1\011\uffe1\022\uffe1\023\uffe1" +
    "\040\uffe1\042\234\044\uffe1\045\uffe1\046\uffe1\047\uffe1\050" +
    "\uffe1\051\uffe1\052\uffe1\053\uffe1\054\uffe1\055\uffe1\056\uffe1" +
    "\057\uffe1\060\uffe1\061\uffe1\001\002\000\052\004\100\007" +
    "\047\011\076\022\072\023\070\040\010\044\063\045\057" +
    "\046\055\047\015\050\053\051\103\052\102\053\013\054" +
    "\075\055\014\056\074\057\054\060\052\061\062\001\002" +
    "\000\056\004\uffe0\007\uffe0\010\uffe0\011\uffe0\022\uffe0\023" +
    "\uffe0\040\uffe0\042\uffe0\044\uffe0\045\uffe0\046\uffe0\047\uffe0" +
    "\050\uffe0\051\uffe0\052\uffe0\053\uffe0\054\uffe0\055\uffe0\056" +
    "\uffe0\057\uffe0\060\uffe0\061\uffe0\001\002\000\006\013\240" +
    "\021\034\001\002\000\056\005\uffcb\006\uffcb\011\uffcb\013" +
    "\uffd4\014\uffcb\015\uffcb\016\uffcb\017\uffcb\021\uffd4\022\uffcb" +
    "\024\uffcb\025\uffcb\026\uffcb\027\uffcb\030\uffcb\031\uffcb\032" +
    "\uffcb\033\uffcb\034\uffcb\035\uffcb\036\uffcb\037\uffcb\001\002" +
    "\000\026\004\100\022\072\023\070\044\063\050\053\051" +
    "\103\054\075\057\054\060\052\061\105\001\002\000\004" +
    "\014\242\001\002\000\052\005\uffcf\006\uffcf\011\uffcf\014" +
    "\uffcf\015\uffcf\016\uffcf\017\uffcf\022\uffcf\024\uffcf\025\uffcf" +
    "\026\uffcf\027\uffcf\030\uffcf\031\uffcf\032\uffcf\033\uffcf\034" +
    "\uffcf\035\uffcf\036\uffcf\037\uffcf\001\002\000\016\005\ufff9" +
    "\040\010\047\015\053\013\055\014\061\012\001\002\000" +
    "\004\005\ufff7\001\002\000\010\005\ufffa\006\ufffa\020\ufffa" +
    "\001\002\000\004\004\247\001\002\000\016\005\ufff9\040" +
    "\010\047\015\053\013\055\014\061\012\001\002\000\004" +
    "\005\251\001\002\000\004\007\047\001\002\000\020\002" +
    "\uffff\040\uffff\041\uffff\047\uffff\053\uffff\055\uffff\061\uffff" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\250\000\012\002\005\003\010\004\006\021\003\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\003\010\004" +
    "\015\021\003\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\020\001\001\000\002\001\001" +
    "\000\004\013\025\001\001\000\002\001\001\000\004\007" +
    "\024\001\001\000\002\001\001\000\006\010\030\021\027" +
    "\001\001\000\002\001\001\000\006\011\032\012\034\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\032\012\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\005\043\006\044\021\042\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\047\001\001\000\004\015\050\001\001\000\002\001" +
    "\001\000\026\014\100\016\065\021\072\023\055\024\057" +
    "\025\060\026\063\027\064\030\066\031\070\001\001\000" +
    "\002\001\001\000\004\021\235\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\201\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\174\001\001\000\004\035" +
    "\161\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\155\001\001\000\002\001\001\000\004\023\147\001" +
    "\001\000\006\017\137\020\141\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\023\103\024\057\025\060\026\063\027\064\030\066" +
    "\031\126\001\001\000\002\001\001\000\020\023\103\024" +
    "\057\025\060\026\063\027\064\030\066\031\105\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\023\103\024\057\025\060\026\063\027\064\030\066\031" +
    "\114\032\115\001\001\000\020\023\103\024\057\025\060" +
    "\026\063\027\064\030\066\031\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\023\103\024\057\025\060\026" +
    "\063\027\064\030\066\031\114\032\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\023" +
    "\103\024\057\025\060\026\063\027\064\030\066\031\114" +
    "\032\124\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\023\103\024\057\025" +
    "\060\026\063\027\064\030\066\031\134\001\001\000\002" +
    "\001\001\000\026\014\100\016\136\021\072\023\055\024" +
    "\057\025\060\026\063\027\064\030\066\031\070\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\023\103\024\057" +
    "\025\060\026\063\027\064\030\066\031\144\001\001\000" +
    "\002\001\001\000\006\017\137\020\146\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\023\103\024\057\025\060\026" +
    "\063\027\064\030\066\031\157\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\023\103\024\057\025\060\026" +
    "\171\001\001\000\016\023\103\024\057\025\060\026\063" +
    "\027\064\030\170\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\174\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\023\103\024\057\025\175" +
    "\001\001\000\004\034\201\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\023\103\024\202" +
    "\001\001\000\002\001\001\000\020\023\103\024\057\025" +
    "\060\026\063\027\064\030\066\031\207\001\001\000\020" +
    "\023\103\024\057\025\060\026\063\027\064\030\066\031" +
    "\205\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\023\103\024\057\025" +
    "\060\026\063\027\064\030\066\031\212\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\005\215\021\042\001" +
    "\001\000\002\001\001\000\020\023\103\024\057\025\060" +
    "\026\063\027\064\030\066\031\217\001\001\000\002\001" +
    "\001\000\026\014\100\016\221\021\072\023\055\024\057" +
    "\025\060\026\063\027\064\030\066\031\070\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\023\103\024\057\025\060\026\063\027\064\030\066\031" +
    "\225\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\023\103\024\057\025\060\026\063\027\064\030\066\031" +
    "\230\001\001\000\002\001\001\000\026\014\100\016\232" +
    "\021\072\023\055\024\057\025\060\026\063\027\064\030" +
    "\066\031\070\001\001\000\002\001\001\000\026\014\100" +
    "\016\234\021\072\023\055\024\057\025\060\026\063\027" +
    "\064\030\066\031\070\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\023\103\024\057\025" +
    "\060\026\063\027\064\030\066\031\240\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\005\043\006\243\021" +
    "\042\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\005\043\006\247\021\042\001\001\000" +
    "\002\001\001\000\004\014\251\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public latte.Absyn.Program pProgram() throws Exception {
    java_cup.runtime.Symbol res = parse();
    return (latte.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  //report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Program start_val = (latte.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListTopDef 
            {
              latte.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListTopDef p_1 = (latte.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Prog(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.Prog)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Prog)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Prog)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Prog)RESULT).line_num = -1;
  ((latte.Absyn.Prog)RESULT).col_num = -1;
  ((latte.Absyn.Prog)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // TopDef ::= Type _IDENT_ _SYMB_0 ListArg _SYMB_1 Block 
            {
              latte.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.ListArg p_4 = (latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Block p_6 = (latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.FnDef(p_1,p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((latte.Absyn.FnDef)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.FnDef)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.FnDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.FnDef)RESULT).line_num = -1;
  ((latte.Absyn.FnDef)RESULT).col_num = -1;
  ((latte.Absyn.FnDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // TopDef ::= _SYMB_29 _IDENT_ ClBlock 
            {
              latte.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ClBlock p_3 = (latte.Absyn.ClBlock)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClDef(p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClDef)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClDef)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClDef)RESULT).line_num = -1;
  ((latte.Absyn.ClDef)RESULT).col_num = -1;
  ((latte.Absyn.ClDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // TopDef ::= _SYMB_29 _IDENT_ _SYMB_31 _IDENT_ ClBlock 
            {
              latte.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ClBlock p_5 = (latte.Absyn.ClBlock)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClDefExt(p_2,p_4,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_5xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClDefExt)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClDefExt)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClDefExt)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClDefExt)RESULT).line_num = -1;
  ((latte.Absyn.ClDefExt)RESULT).col_num = -1;
  ((latte.Absyn.ClDefExt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ListTopDef ::= TopDef 
            {
              latte.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.TopDef p_1 = (latte.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListTopDef(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ListTopDef ::= TopDef ListTopDef 
            {
              latte.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.TopDef p_1 = (latte.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListTopDef p_2 = (latte.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Arg ::= Type _IDENT_ 
            {
              latte.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Ar(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Ar)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Ar)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Ar)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Ar)RESULT).line_num = -1;
  ((latte.Absyn.Ar)RESULT).col_num = -1;
  ((latte.Absyn.Ar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ListArg ::= 
            {
              latte.Absyn.ListArg RESULT =null;
		 RESULT = new latte.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ListArg ::= Arg 
            {
              latte.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Arg p_1 = (latte.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ListArg ::= Arg _SYMB_2 ListArg 
            {
              latte.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Arg p_1 = (latte.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListArg p_3 = (latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ClBlock ::= _SYMB_3 ListClMember _SYMB_4 
            {
              latte.Absyn.ClBlock RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListClMember p_2 = (latte.Absyn.ListClMember)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClBlk(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClBlk)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClBlk)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClBlk)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClBlk)RESULT).line_num = -1;
  ((latte.Absyn.ClBlk)RESULT).col_num = -1;
  ((latte.Absyn.ClBlk)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClBlock",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ClMember ::= Type ListClFieldItem _SYMB_5 
            {
              latte.Absyn.ClMember RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListClFieldItem p_2 = (latte.Absyn.ListClFieldItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClFields(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClFields)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClFields)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClFields)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClFields)RESULT).line_num = -1;
  ((latte.Absyn.ClFields)RESULT).col_num = -1;
  ((latte.Absyn.ClFields)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClMember",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ClMember ::= Type _IDENT_ _SYMB_0 ListArg _SYMB_1 Block 
            {
              latte.Absyn.ClMember RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.ListArg p_4 = (latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Block p_6 = (latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClMethod(p_1,p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClMethod)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClMethod)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClMethod)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClMethod)RESULT).line_num = -1;
  ((latte.Absyn.ClMethod)RESULT).col_num = -1;
  ((latte.Absyn.ClMethod)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClMember",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ClFieldItem ::= _IDENT_ 
            {
              latte.Absyn.ClFieldItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ClFieldItemNoInit(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.ClFieldItemNoInit)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ClFieldItemNoInit)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ClFieldItemNoInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ClFieldItemNoInit)RESULT).line_num = -1;
  ((latte.Absyn.ClFieldItemNoInit)RESULT).col_num = -1;
  ((latte.Absyn.ClFieldItemNoInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClFieldItem",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ListClFieldItem ::= ClFieldItem 
            {
              latte.Absyn.ListClFieldItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ClFieldItem p_1 = (latte.Absyn.ClFieldItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListClFieldItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListClFieldItem",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ListClFieldItem ::= ClFieldItem _SYMB_2 ListClFieldItem 
            {
              latte.Absyn.ListClFieldItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.ClFieldItem p_1 = (latte.Absyn.ClFieldItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListClFieldItem p_3 = (latte.Absyn.ListClFieldItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListClFieldItem",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ListClMember ::= 
            {
              latte.Absyn.ListClMember RESULT =null;
		 RESULT = new latte.Absyn.ListClMember(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListClMember",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ListClMember ::= ListClMember ClMember 
            {
              latte.Absyn.ListClMember RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListClMember p_1 = (latte.Absyn.ListClMember)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ClMember p_2 = (latte.Absyn.ClMember)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListClMember",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Block ::= _SYMB_3 ListStmt _SYMB_4 
            {
              latte.Absyn.Block RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListStmt p_2 = (latte.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Blk(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Blk)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Blk)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Blk)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Blk)RESULT).line_num = -1;
  ((latte.Absyn.Blk)RESULT).col_num = -1;
  ((latte.Absyn.Blk)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Block",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ListStmt ::= 
            {
              latte.Absyn.ListStmt RESULT =null;
		 RESULT = new latte.Absyn.ListStmt(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ListStmt ::= ListStmt Stmt 
            {
              latte.Absyn.ListStmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListStmt p_1 = (latte.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Stmt p_2 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stmt ::= _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Empty();
((latte.Absyn.Empty)RESULT).line_num = -1;
((latte.Absyn.Empty)RESULT).col_num = -1;
((latte.Absyn.Empty)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stmt ::= Block 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Block p_1 = (latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.BStmt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.BStmt)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.BStmt)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.BStmt)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.BStmt)RESULT).line_num = -1;
  ((latte.Absyn.BStmt)RESULT).col_num = -1;
  ((latte.Absyn.BStmt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Stmt ::= Type ListItem _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListItem p_2 = (latte.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Decl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Decl)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Decl)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Decl)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Decl)RESULT).line_num = -1;
  ((latte.Absyn.Decl)RESULT).col_num = -1;
  ((latte.Absyn.Decl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Stmt ::= _IDENT_ _SYMB_6 Expr _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Ass(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.Ass)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Ass)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Ass)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Ass)RESULT).line_num = -1;
  ((latte.Absyn.Ass)RESULT).col_num = -1;
  ((latte.Absyn.Ass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Stmt ::= _IDENT_ _SYMB_7 Expr _SYMB_8 _SYMB_6 Expr _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_6 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.AssArray(p_1,p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((latte.Absyn.AssArray)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.AssArray)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.AssArray)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.AssArray)RESULT).line_num = -1;
  ((latte.Absyn.AssArray)RESULT).col_num = -1;
  ((latte.Absyn.AssArray)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Stmt ::= Expr6 _SYMB_9 _IDENT_ _SYMB_6 Expr _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_5 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.AssField(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte.Absyn.AssField)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.AssField)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.AssField)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.AssField)RESULT).line_num = -1;
  ((latte.Absyn.AssField)RESULT).col_num = -1;
  ((latte.Absyn.AssField)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Stmt ::= Expr _SYMB_10 _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Incr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.Incr)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Incr)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Incr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Incr)RESULT).line_num = -1;
  ((latte.Absyn.Incr)RESULT).col_num = -1;
  ((latte.Absyn.Incr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Stmt ::= Expr _SYMB_11 _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Decr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.Decr)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Decr)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Decr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Decr)RESULT).line_num = -1;
  ((latte.Absyn.Decr)RESULT).col_num = -1;
  ((latte.Absyn.Decr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stmt ::= _SYMB_38 Expr _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_2 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Ret(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Ret)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Ret)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Ret)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Ret)RESULT).line_num = -1;
  ((latte.Absyn.Ret)RESULT).col_num = -1;
  ((latte.Absyn.Ret)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stmt ::= _SYMB_38 _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.VRet();
((latte.Absyn.VRet)RESULT).line_num = -1;
((latte.Absyn.VRet)RESULT).col_num = -1;
((latte.Absyn.VRet)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Stmt ::= _SYMB_34 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Stmt p_5 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Cond(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte.Absyn.Cond)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Cond)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Cond)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Cond)RESULT).line_num = -1;
  ((latte.Absyn.Cond)RESULT).col_num = -1;
  ((latte.Absyn.Cond)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Stmt ::= _SYMB_34 _SYMB_0 Expr _SYMB_1 Stmt _SYMB_30 Stmt 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Stmt p_5 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Stmt p_7 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.CondElse(p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((latte.Absyn.CondElse)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.CondElse)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.CondElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.CondElse)RESULT).line_num = -1;
  ((latte.Absyn.CondElse)RESULT).col_num = -1;
  ((latte.Absyn.CondElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Stmt ::= _SYMB_42 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Stmt p_5 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.While(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte.Absyn.While)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.While)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.While)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.While)RESULT).line_num = -1;
  ((latte.Absyn.While)RESULT).col_num = -1;
  ((latte.Absyn.While)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Stmt ::= _SYMB_33 _SYMB_0 Arg _SYMB_12 Expr _SYMB_1 Stmt 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		latte.Absyn.Arg p_3 = (latte.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_5 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Stmt p_7 = (latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.For(p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((latte.Absyn.For)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.For)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.For)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.For)RESULT).line_num = -1;
  ((latte.Absyn.For)RESULT).col_num = -1;
  ((latte.Absyn.For)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Stmt ::= Expr _SYMB_5 
            {
              latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.SExp(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.SExp)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.SExp)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.SExp)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.SExp)RESULT).line_num = -1;
  ((latte.Absyn.SExp)RESULT).col_num = -1;
  ((latte.Absyn.SExp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Item ::= _IDENT_ 
            {
              latte.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.NoInit(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.NoInit)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.NoInit)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.NoInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.NoInit)RESULT).line_num = -1;
  ((latte.Absyn.NoInit)RESULT).col_num = -1;
  ((latte.Absyn.NoInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Item ::= _IDENT_ _SYMB_6 Expr 
            {
              latte.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Init(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.Init)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Init)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Init)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Init)RESULT).line_num = -1;
  ((latte.Absyn.Init)RESULT).col_num = -1;
  ((latte.Absyn.Init)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ListItem ::= Item 
            {
              latte.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Item p_1 = (latte.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ListItem ::= Item _SYMB_2 ListItem 
            {
              latte.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Item p_1 = (latte.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListItem p_3 = (latte.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Type ::= _SYMB_35 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Int();
((latte.Absyn.Int)RESULT).line_num = -1;
((latte.Absyn.Int)RESULT).col_num = -1;
((latte.Absyn.Int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Type ::= _SYMB_39 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Str();
((latte.Absyn.Str)RESULT).line_num = -1;
((latte.Absyn.Str)RESULT).col_num = -1;
((latte.Absyn.Str)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Type ::= _SYMB_28 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Bool();
((latte.Absyn.Bool)RESULT).line_num = -1;
((latte.Absyn.Bool)RESULT).col_num = -1;
((latte.Absyn.Bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Type ::= _SYMB_41 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Void();
((latte.Absyn.Void)RESULT).line_num = -1;
((latte.Absyn.Void)RESULT).col_num = -1;
((latte.Absyn.Void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Type ::= _IDENT_ 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Class(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.Class)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Class)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Class)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Class)RESULT).line_num = -1;
  ((latte.Absyn.Class)RESULT).col_num = -1;
  ((latte.Absyn.Class)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Type ::= Type _SYMB_13 
            {
              latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Array(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.Array)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Array)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Array)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Array)RESULT).line_num = -1;
  ((latte.Absyn.Array)RESULT).col_num = -1;
  ((latte.Absyn.Array)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ListType ::= 
            {
              latte.Absyn.ListType RESULT =null;
		 RESULT = new latte.Absyn.ListType(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ListType ::= Type 
            {
              latte.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListType(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ListType ::= Type _SYMB_2 ListType 
            {
              latte.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Type p_1 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListType p_3 = (latte.Absyn.ListType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Expr6 ::= _SYMB_36 Type _SYMB_7 Expr _SYMB_8 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		latte.Absyn.Type p_2 = (latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_4 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ENewArray(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((latte.Absyn.ENewArray)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ENewArray)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ENewArray)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ENewArray)RESULT).line_num = -1;
  ((latte.Absyn.ENewArray)RESULT).col_num = -1;
  ((latte.Absyn.ENewArray)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Expr6 ::= _IDENT_ _SYMB_7 Expr _SYMB_8 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EArrayElem(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EArrayElem)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EArrayElem)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EArrayElem)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EArrayElem)RESULT).line_num = -1;
  ((latte.Absyn.EArrayElem)RESULT).col_num = -1;
  ((latte.Absyn.EArrayElem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Expr6 ::= _SYMB_0 _IDENT_ _SYMB_1 _SYMB_37 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ENull(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.ENull)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ENull)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ENull)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ENull)RESULT).line_num = -1;
  ((latte.Absyn.ENull)RESULT).col_num = -1;
  ((latte.Absyn.ENull)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Expr6 ::= _SYMB_37 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ENil();
((latte.Absyn.ENil)RESULT).line_num = -1;
((latte.Absyn.ENil)RESULT).col_num = -1;
((latte.Absyn.ENil)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Expr6 ::= _SYMB_36 _IDENT_ 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ENew(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.ENew)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ENew)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ENew)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ENew)RESULT).line_num = -1;
  ((latte.Absyn.ENew)RESULT).col_num = -1;
  ((latte.Absyn.ENew)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Expr6 ::= Expr6 _SYMB_9 _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListExpr p_5 = (latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EMethod(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte.Absyn.EMethod)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EMethod)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EMethod)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EMethod)RESULT).line_num = -1;
  ((latte.Absyn.EMethod)RESULT).col_num = -1;
  ((latte.Absyn.EMethod)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Expr6 ::= Expr6 _SYMB_9 _IDENT_ 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EField(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EField)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EField)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EField)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EField)RESULT).line_num = -1;
  ((latte.Absyn.EField)RESULT).col_num = -1;
  ((latte.Absyn.EField)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Expr6 ::= _IDENT_ 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EVar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.EVar)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EVar)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EVar)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EVar)RESULT).line_num = -1;
  ((latte.Absyn.EVar)RESULT).col_num = -1;
  ((latte.Absyn.EVar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Expr6 ::= _INTEGER_ 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ELitInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.ELitInt)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ELitInt)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ELitInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ELitInt)RESULT).line_num = -1;
  ((latte.Absyn.ELitInt)RESULT).col_num = -1;
  ((latte.Absyn.ELitInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Expr6 ::= _SYMB_40 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ELitTrue();
((latte.Absyn.ELitTrue)RESULT).line_num = -1;
((latte.Absyn.ELitTrue)RESULT).col_num = -1;
((latte.Absyn.ELitTrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Expr6 ::= _SYMB_32 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ELitFalse();
((latte.Absyn.ELitFalse)RESULT).line_num = -1;
((latte.Absyn.ELitFalse)RESULT).col_num = -1;
((latte.Absyn.ELitFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Expr6 ::= _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.ListExpr p_3 = (latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EApp(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EApp)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EApp)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EApp)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EApp)RESULT).line_num = -1;
  ((latte.Absyn.EApp)RESULT).col_num = -1;
  ((latte.Absyn.EApp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Expr6 ::= _STRING_ 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EString)RESULT).line_num = -1;
  ((latte.Absyn.EString)RESULT).col_num = -1;
  ((latte.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Expr6 ::= _SYMB_0 Expr _SYMB_1 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.Expr p_2 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Expr5 ::= _SYMB_14 Expr6 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_2 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Neg(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Neg)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Neg)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Neg)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Neg)RESULT).line_num = -1;
  ((latte.Absyn.Neg)RESULT).col_num = -1;
  ((latte.Absyn.Neg)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Expr5 ::= _SYMB_15 Expr6 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_2 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Not(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte.Absyn.Not)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.Not)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.Not)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.Not)RESULT).line_num = -1;
  ((latte.Absyn.Not)RESULT).col_num = -1;
  ((latte.Absyn.Not)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Expr5 ::= Expr6 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Expr4 ::= Expr4 MulOp Expr5 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.MulOp p_2 = (latte.Absyn.MulOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EMul(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EMul)RESULT).line_num = -1;
  ((latte.Absyn.EMul)RESULT).col_num = -1;
  ((latte.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Expr4 ::= Expr5 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Expr3 ::= Expr3 AddOp Expr4 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.AddOp p_2 = (latte.Absyn.AddOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EAdd(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EAdd)RESULT).line_num = -1;
  ((latte.Absyn.EAdd)RESULT).col_num = -1;
  ((latte.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Expr3 ::= Expr4 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Expr2 ::= Expr2 RelOp Expr3 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte.Absyn.RelOp p_2 = (latte.Absyn.RelOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ERel(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.ERel)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.ERel)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.ERel)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.ERel)RESULT).line_num = -1;
  ((latte.Absyn.ERel)RESULT).col_num = -1;
  ((latte.Absyn.ERel)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Expr2 ::= Expr3 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Expr1 ::= Expr2 _SYMB_16 Expr1 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EAnd)RESULT).line_num = -1;
  ((latte.Absyn.EAnd)RESULT).col_num = -1;
  ((latte.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr1 ::= Expr2 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Expr ::= Expr1 _SYMB_17 Expr 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_3 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((latte.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((latte.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte.Absyn.EOr)RESULT).line_num = -1;
  ((latte.Absyn.EOr)RESULT).col_num = -1;
  ((latte.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Expr ::= Expr1 
            {
              latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ListExpr ::= 
            {
              latte.Absyn.ListExpr RESULT =null;
		 RESULT = new latte.Absyn.ListExpr(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ListExpr ::= Expr 
            {
              latte.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.ListExpr(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ListExpr ::= Expr _SYMB_2 ListExpr 
            {
              latte.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte.Absyn.Expr p_1 = (latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte.Absyn.ListExpr p_3 = (latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // AddOp ::= _SYMB_18 
            {
              latte.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Plus();
((latte.Absyn.Plus)RESULT).line_num = -1;
((latte.Absyn.Plus)RESULT).col_num = -1;
((latte.Absyn.Plus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // AddOp ::= _SYMB_14 
            {
              latte.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Minus();
((latte.Absyn.Minus)RESULT).line_num = -1;
((latte.Absyn.Minus)RESULT).col_num = -1;
((latte.Absyn.Minus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // MulOp ::= _SYMB_19 
            {
              latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Times();
((latte.Absyn.Times)RESULT).line_num = -1;
((latte.Absyn.Times)RESULT).col_num = -1;
((latte.Absyn.Times)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // MulOp ::= _SYMB_20 
            {
              latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Div();
((latte.Absyn.Div)RESULT).line_num = -1;
((latte.Absyn.Div)RESULT).col_num = -1;
((latte.Absyn.Div)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // MulOp ::= _SYMB_21 
            {
              latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.Mod();
((latte.Absyn.Mod)RESULT).line_num = -1;
((latte.Absyn.Mod)RESULT).col_num = -1;
((latte.Absyn.Mod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // RelOp ::= _SYMB_22 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.LTH();
((latte.Absyn.LTH)RESULT).line_num = -1;
((latte.Absyn.LTH)RESULT).col_num = -1;
((latte.Absyn.LTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // RelOp ::= _SYMB_23 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.LE();
((latte.Absyn.LE)RESULT).line_num = -1;
((latte.Absyn.LE)RESULT).col_num = -1;
((latte.Absyn.LE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // RelOp ::= _SYMB_24 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.GTH();
((latte.Absyn.GTH)RESULT).line_num = -1;
((latte.Absyn.GTH)RESULT).col_num = -1;
((latte.Absyn.GTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // RelOp ::= _SYMB_25 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.GE();
((latte.Absyn.GE)RESULT).line_num = -1;
((latte.Absyn.GE)RESULT).col_num = -1;
((latte.Absyn.GE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // RelOp ::= _SYMB_26 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.EQU();
((latte.Absyn.EQU)RESULT).line_num = -1;
((latte.Absyn.EQU)RESULT).col_num = -1;
((latte.Absyn.EQU)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // RelOp ::= _SYMB_27 
            {
              latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte.Absyn.NE();
((latte.Absyn.NE)RESULT).line_num = -1;
((latte.Absyn.NE)RESULT).col_num = -1;
((latte.Absyn.NE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
