// File generated by the BNF Converter (bnfc 2.9.3).

package latte.Absyn;

import latte.errors.SemanticError;

public class For  extends Stmt {
  public final Arg arg_;
  public final Expr expr_;
  public final Stmt stmt_;
  public int line_num, col_num, offset;
  public For(Arg p1, Expr p2, Stmt p3) { arg_ = p1; expr_ = p2; stmt_ = p3; }

  public <R,A> R accept(latte.Absyn.Stmt.Visitor<R,A> v, A arg) throws SemanticError { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof latte.Absyn.For) {
      latte.Absyn.For x = (latte.Absyn.For)o;
      return this.arg_.equals(x.arg_) && this.expr_.equals(x.expr_) && this.stmt_.equals(x.stmt_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(this.arg_.hashCode())+this.expr_.hashCode())+this.stmt_.hashCode();
  }


}
