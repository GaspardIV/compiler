
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package latte_lang;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\105\000\002\002\004\000\002\002\003\000\002\003" +
    "\010\000\002\004\003\000\002\004\004\000\002\005\004" +
    "\000\002\006\002\000\002\006\003\000\002\006\005\000" +
    "\002\007\005\000\002\010\002\000\002\010\004\000\002" +
    "\011\003\000\002\011\003\000\002\011\005\000\002\011" +
    "\006\000\002\011\005\000\002\011\005\000\002\011\005" +
    "\000\002\011\004\000\002\011\007\000\002\011\011\000" +
    "\002\011\007\000\002\011\004\000\002\012\003\000\002" +
    "\012\005\000\002\013\003\000\002\013\005\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\015\002\000\002\015\003\000\002\015\005\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\006\000\002\016\003\000\002\016" +
    "\005\000\002\017\004\000\002\017\004\000\002\017\003" +
    "\000\002\020\005\000\002\020\003\000\002\021\005\000" +
    "\002\021\003\000\002\022\005\000\002\022\003\000\002" +
    "\023\005\000\002\023\003\000\002\024\005\000\002\024" +
    "\003\000\002\025\002\000\002\025\003\000\002\025\005" +
    "\000\002\026\003\000\002\026\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\030\003\000\002" +
    "\030\003\000\002\030\003\000\002\030\003\000\002\030" +
    "\003\000\002\030\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\153\000\012\033\013\037\010\041\007\043\006\001" +
    "\002\000\004\002\155\001\002\000\004\047\015\001\002" +
    "\000\004\047\uffe2\001\002\000\004\047\uffe4\001\002\000" +
    "\004\047\uffe5\001\002\000\004\002\000\001\002\000\014" +
    "\002\ufffe\033\013\037\010\041\007\043\006\001\002\000" +
    "\004\047\uffe3\001\002\000\004\002\ufffd\001\002\000\004" +
    "\004\016\001\002\000\014\005\ufffb\033\013\037\010\041" +
    "\007\043\006\001\002\000\004\047\154\001\002\000\006" +
    "\005\ufffa\006\152\001\002\000\004\005\022\001\002\000" +
    "\004\007\023\001\002\000\046\004\ufff7\007\ufff7\010\ufff7" +
    "\011\ufff7\015\ufff7\016\ufff7\033\ufff7\035\ufff7\036\ufff7\037" +
    "\ufff7\040\ufff7\041\ufff7\042\ufff7\043\ufff7\044\ufff7\045\ufff7" +
    "\046\ufff7\047\ufff7\001\002\000\014\002\uffff\033\uffff\037" +
    "\uffff\041\uffff\043\uffff\001\002\000\046\004\051\007\023" +
    "\010\047\011\046\015\044\016\045\033\013\035\054\036" +
    "\053\037\010\040\052\041\007\042\037\043\006\044\032" +
    "\045\027\046\026\047\033\001\002\000\042\005\uffdd\006" +
    "\uffdd\011\uffdd\015\uffdd\017\uffdd\020\uffdd\021\uffdd\022\uffdd" +
    "\023\uffdd\024\uffdd\025\uffdd\026\uffdd\027\uffdd\030\uffdd\031" +
    "\uffdd\032\uffdd\001\002\000\042\005\uffd9\006\uffd9\011\uffd9" +
    "\015\uffd9\017\uffd9\020\uffd9\021\uffd9\022\uffd9\023\uffd9\024" +
    "\uffd9\025\uffd9\026\uffd9\027\uffd9\030\uffd9\031\uffd9\032\uffd9" +
    "\001\002\000\042\005\uffd5\006\uffd5\011\uffd5\015\uffd5\017" +
    "\uffd5\020\uffd5\021\uffd5\022\uffd5\023\uffd5\024\uffd5\025\uffd5" +
    "\026\uffd5\027\uffd5\030\uffd5\031\uffd5\032\uffd5\001\002\000" +
    "\042\005\uffd3\006\uffd3\011\uffd3\015\uffd3\017\uffd3\020\uffd3" +
    "\021\uffd3\022\uffd3\023\uffd3\024\uffd3\025\uffd3\026\uffd3\027" +
    "\uffd3\030\uffd3\031\uffd3\032\uffd3\001\002\000\004\004\146" +
    "\001\002\000\046\004\060\011\uffde\012\141\013\140\014" +
    "\137\015\uffde\017\uffde\020\uffde\021\uffde\022\uffde\023\uffde" +
    "\024\uffde\025\uffde\026\uffde\027\uffde\030\uffde\031\uffde\032" +
    "\uffde\001\002\000\042\005\uffd1\006\uffd1\011\uffd1\015\uffd1" +
    "\017\uffd1\020\uffd1\021\uffd1\022\134\023\133\024\132\025" +
    "\uffd1\026\uffd1\027\uffd1\030\uffd1\031\uffd1\032\uffd1\001\002" +
    "\000\034\005\uffcf\006\uffcf\011\uffcf\015\126\017\uffcf\020" +
    "\uffcf\021\127\025\uffcf\026\uffcf\027\uffcf\030\uffcf\031\uffcf" +
    "\032\uffcf\001\002\000\030\005\uffcd\006\uffcd\011\uffcd\017" +
    "\123\020\uffcd\025\122\026\121\027\117\030\120\031\116" +
    "\032\115\001\002\000\042\005\uffdc\006\uffdc\011\uffdc\015" +
    "\uffdc\017\uffdc\020\uffdc\021\uffdc\022\uffdc\023\uffdc\024\uffdc" +
    "\025\uffdc\026\uffdc\027\uffdc\030\uffdc\031\uffdc\032\uffdc\001" +
    "\002\000\012\005\uffcb\006\uffcb\011\uffcb\020\112\001\002" +
    "\000\046\004\ufff6\007\ufff6\010\ufff6\011\ufff6\015\ufff6\016" +
    "\ufff6\033\ufff6\035\ufff6\036\ufff6\037\ufff6\040\ufff6\041\ufff6" +
    "\042\ufff6\043\ufff6\044\ufff6\045\ufff6\046\ufff6\047\ufff6\001" +
    "\002\000\004\011\111\001\002\000\004\047\102\001\002" +
    "\000\016\004\051\035\054\042\037\045\027\046\026\047" +
    "\057\001\002\000\016\004\051\035\054\042\037\045\027" +
    "\046\026\047\057\001\002\000\050\004\ufff5\007\ufff5\010" +
    "\ufff5\011\ufff5\015\ufff5\016\ufff5\033\ufff5\034\ufff5\035\ufff5" +
    "\036\ufff5\037\ufff5\040\ufff5\041\ufff5\042\ufff5\043\ufff5\044" +
    "\ufff5\045\ufff5\046\ufff5\047\ufff5\001\002\000\052\002\ufff8" +
    "\004\ufff8\007\ufff8\010\ufff8\011\ufff8\015\ufff8\016\ufff8\033" +
    "\ufff8\034\ufff8\035\ufff8\036\ufff8\037\ufff8\040\ufff8\041\ufff8" +
    "\042\ufff8\043\ufff8\044\ufff8\045\ufff8\046\ufff8\047\ufff8\001" +
    "\002\000\050\004\ufff4\007\ufff4\010\ufff4\011\ufff4\015\ufff4" +
    "\016\ufff4\033\ufff4\034\ufff4\035\ufff4\036\ufff4\037\ufff4\040" +
    "\ufff4\041\ufff4\042\ufff4\043\ufff4\044\ufff4\045\ufff4\046\ufff4" +
    "\047\ufff4\001\002\000\022\004\051\015\044\016\045\035" +
    "\054\042\037\045\027\046\026\047\057\001\002\000\024" +
    "\004\051\011\072\015\044\016\045\035\054\042\037\045" +
    "\027\046\026\047\057\001\002\000\004\004\055\001\002" +
    "\000\042\005\uffdb\006\uffdb\011\uffdb\015\uffdb\017\uffdb\020" +
    "\uffdb\021\uffdb\022\uffdb\023\uffdb\024\uffdb\025\uffdb\026\uffdb" +
    "\027\uffdb\030\uffdb\031\uffdb\032\uffdb\001\002\000\022\004" +
    "\051\015\044\016\045\035\054\042\037\045\027\046\026" +
    "\047\057\001\002\000\004\005\066\001\002\000\044\004" +
    "\060\005\uffde\006\uffde\011\uffde\015\uffde\017\uffde\020\uffde" +
    "\021\uffde\022\uffde\023\uffde\024\uffde\025\uffde\026\uffde\027" +
    "\uffde\030\uffde\031\uffde\032\uffde\001\002\000\024\004\051" +
    "\005\uffca\015\044\016\045\035\054\042\037\045\027\046" +
    "\026\047\057\001\002\000\006\005\uffc9\006\064\001\002" +
    "\000\004\005\063\001\002\000\042\005\uffda\006\uffda\011" +
    "\uffda\015\uffda\017\uffda\020\uffda\021\uffda\022\uffda\023\uffda" +
    "\024\uffda\025\uffda\026\uffda\027\uffda\030\uffda\031\uffda\032" +
    "\uffda\001\002\000\024\004\051\005\uffca\015\044\016\045" +
    "\035\054\042\037\045\027\046\026\047\057\001\002\000" +
    "\004\005\uffc8\001\002\000\044\004\051\007\023\011\046" +
    "\015\044\016\045\033\013\035\054\036\053\037\010\040" +
    "\052\041\007\042\037\043\006\044\032\045\027\046\026" +
    "\047\033\001\002\000\050\004\uffed\007\uffed\010\uffed\011" +
    "\uffed\015\uffed\016\uffed\033\uffed\034\070\035\uffed\036\uffed" +
    "\037\uffed\040\uffed\041\uffed\042\uffed\043\uffed\044\uffed\045" +
    "\uffed\046\uffed\047\uffed\001\002\000\044\004\051\007\023" +
    "\011\046\015\044\016\045\033\013\035\054\036\053\037" +
    "\010\040\052\041\007\042\037\043\006\044\032\045\027" +
    "\046\026\047\033\001\002\000\050\004\uffec\007\uffec\010" +
    "\uffec\011\uffec\015\uffec\016\uffec\033\uffec\034\uffec\035\uffec" +
    "\036\uffec\037\uffec\040\uffec\041\uffec\042\uffec\043\uffec\044" +
    "\uffec\045\uffec\046\uffec\047\uffec\001\002\000\050\004\uffee" +
    "\007\uffee\010\uffee\011\uffee\015\uffee\016\uffee\033\uffee\034" +
    "\uffee\035\uffee\036\uffee\037\uffee\040\uffee\041\uffee\042\uffee" +
    "\043\uffee\044\uffee\045\uffee\046\uffee\047\uffee\001\002\000" +
    "\004\011\074\001\002\000\050\004\uffef\007\uffef\010\uffef" +
    "\011\uffef\015\uffef\016\uffef\033\uffef\034\uffef\035\uffef\036" +
    "\uffef\037\uffef\040\uffef\041\uffef\042\uffef\043\uffef\044\uffef" +
    "\045\uffef\046\uffef\047\uffef\001\002\000\004\005\076\001" +
    "\002\000\042\005\uffd8\006\uffd8\011\uffd8\015\uffd8\017\uffd8" +
    "\020\uffd8\021\uffd8\022\uffd8\023\uffd8\024\uffd8\025\uffd8\026" +
    "\uffd8\027\uffd8\030\uffd8\031\uffd8\032\uffd8\001\002\000\042" +
    "\005\uffd6\006\uffd6\011\uffd6\015\uffd6\017\uffd6\020\uffd6\021" +
    "\uffd6\022\uffd6\023\uffd6\024\uffd6\025\uffd6\026\uffd6\027\uffd6" +
    "\030\uffd6\031\uffd6\032\uffd6\001\002\000\042\005\uffd7\006" +
    "\uffd7\011\uffd7\015\uffd7\017\uffd7\020\uffd7\021\uffd7\022\uffd7" +
    "\023\uffd7\024\uffd7\025\uffd7\026\uffd7\027\uffd7\030\uffd7\031" +
    "\uffd7\032\uffd7\001\002\000\006\006\107\011\uffe7\001\002" +
    "\000\010\006\uffe9\011\uffe9\012\105\001\002\000\004\011" +
    "\104\001\002\000\050\004\ufff3\007\ufff3\010\ufff3\011\ufff3" +
    "\015\ufff3\016\ufff3\033\ufff3\034\ufff3\035\ufff3\036\ufff3\037" +
    "\ufff3\040\ufff3\041\ufff3\042\ufff3\043\ufff3\044\ufff3\045\ufff3" +
    "\046\ufff3\047\ufff3\001\002\000\022\004\051\015\044\016" +
    "\045\035\054\042\037\045\027\046\026\047\057\001\002" +
    "\000\006\006\uffe8\011\uffe8\001\002\000\004\047\102\001" +
    "\002\000\004\011\uffe6\001\002\000\050\004\uffea\007\uffea" +
    "\010\uffea\011\uffea\015\uffea\016\uffea\033\uffea\034\uffea\035" +
    "\uffea\036\uffea\037\uffea\040\uffea\041\uffea\042\uffea\043\uffea" +
    "\044\uffea\045\uffea\046\uffea\047\uffea\001\002\000\022\004" +
    "\051\015\044\016\045\035\054\042\037\045\027\046\026" +
    "\047\057\001\002\000\010\005\uffcc\006\uffcc\011\uffcc\001" +
    "\002\000\022\004\051\015\044\016\045\035\054\042\037" +
    "\045\027\046\026\047\057\001\002\000\022\004\uffbd\015" +
    "\uffbd\016\uffbd\035\uffbd\042\uffbd\045\uffbd\046\uffbd\047\uffbd" +
    "\001\002\000\022\004\uffbe\015\uffbe\016\uffbe\035\uffbe\042" +
    "\uffbe\045\uffbe\046\uffbe\047\uffbe\001\002\000\022\004\uffc0" +
    "\015\uffc0\016\uffc0\035\uffc0\042\uffc0\045\uffc0\046\uffc0\047" +
    "\uffc0\001\002\000\022\004\uffbf\015\uffbf\016\uffbf\035\uffbf" +
    "\042\uffbf\045\uffbf\046\uffbf\047\uffbf\001\002\000\022\004" +
    "\uffc1\015\uffc1\016\uffc1\035\uffc1\042\uffc1\045\uffc1\046\uffc1" +
    "\047\uffc1\001\002\000\022\004\uffc2\015\uffc2\016\uffc2\035" +
    "\uffc2\042\uffc2\045\uffc2\046\uffc2\047\uffc2\001\002\000\022" +
    "\004\051\015\044\016\045\035\054\042\037\045\027\046" +
    "\026\047\057\001\002\000\012\005\uffce\006\uffce\011\uffce" +
    "\020\uffce\001\002\000\034\005\uffd0\006\uffd0\011\uffd0\015" +
    "\126\017\uffd0\020\uffd0\021\127\025\uffd0\026\uffd0\027\uffd0" +
    "\030\uffd0\031\uffd0\032\uffd0\001\002\000\022\004\uffc6\015" +
    "\uffc6\016\uffc6\035\uffc6\042\uffc6\045\uffc6\046\uffc6\047\uffc6" +
    "\001\002\000\022\004\uffc7\015\uffc7\016\uffc7\035\uffc7\042" +
    "\uffc7\045\uffc7\046\uffc7\047\uffc7\001\002\000\022\004\051" +
    "\015\044\016\045\035\054\042\037\045\027\046\026\047" +
    "\057\001\002\000\042\005\uffd2\006\uffd2\011\uffd2\015\uffd2" +
    "\017\uffd2\020\uffd2\021\uffd2\022\134\023\133\024\132\025" +
    "\uffd2\026\uffd2\027\uffd2\030\uffd2\031\uffd2\032\uffd2\001\002" +
    "\000\022\004\uffc3\015\uffc3\016\uffc3\035\uffc3\042\uffc3\045" +
    "\uffc3\046\uffc3\047\uffc3\001\002\000\022\004\uffc4\015\uffc4" +
    "\016\uffc4\035\uffc4\042\uffc4\045\uffc4\046\uffc4\047\uffc4\001" +
    "\002\000\022\004\uffc5\015\uffc5\016\uffc5\035\uffc5\042\uffc5" +
    "\045\uffc5\046\uffc5\047\uffc5\001\002\000\022\004\051\015" +
    "\044\016\045\035\054\042\037\045\027\046\026\047\057" +
    "\001\002\000\042\005\uffd4\006\uffd4\011\uffd4\015\uffd4\017" +
    "\uffd4\020\uffd4\021\uffd4\022\uffd4\023\uffd4\024\uffd4\025\uffd4" +
    "\026\uffd4\027\uffd4\030\uffd4\031\uffd4\032\uffd4\001\002\000" +
    "\004\011\145\001\002\000\004\011\144\001\002\000\022" +
    "\004\051\015\044\016\045\035\054\042\037\045\027\046" +
    "\026\047\057\001\002\000\004\011\143\001\002\000\050" +
    "\004\ufff2\007\ufff2\010\ufff2\011\ufff2\015\ufff2\016\ufff2\033" +
    "\ufff2\034\ufff2\035\ufff2\036\ufff2\037\ufff2\040\ufff2\041\ufff2" +
    "\042\ufff2\043\ufff2\044\ufff2\045\ufff2\046\ufff2\047\ufff2\001" +
    "\002\000\050\004\ufff1\007\ufff1\010\ufff1\011\ufff1\015\ufff1" +
    "\016\ufff1\033\ufff1\034\ufff1\035\ufff1\036\ufff1\037\ufff1\040" +
    "\ufff1\041\ufff1\042\ufff1\043\ufff1\044\ufff1\045\ufff1\046\ufff1" +
    "\047\ufff1\001\002\000\050\004\ufff0\007\ufff0\010\ufff0\011" +
    "\ufff0\015\ufff0\016\ufff0\033\ufff0\034\ufff0\035\ufff0\036\ufff0" +
    "\037\ufff0\040\ufff0\041\ufff0\042\ufff0\043\ufff0\044\ufff0\045" +
    "\ufff0\046\ufff0\047\ufff0\001\002\000\022\004\051\015\044" +
    "\016\045\035\054\042\037\045\027\046\026\047\057\001" +
    "\002\000\004\005\150\001\002\000\044\004\051\007\023" +
    "\011\046\015\044\016\045\033\013\035\054\036\053\037" +
    "\010\040\052\041\007\042\037\043\006\044\032\045\027" +
    "\046\026\047\033\001\002\000\050\004\uffeb\007\uffeb\010" +
    "\uffeb\011\uffeb\015\uffeb\016\uffeb\033\uffeb\034\uffeb\035\uffeb" +
    "\036\uffeb\037\uffeb\040\uffeb\041\uffeb\042\uffeb\043\uffeb\044" +
    "\uffeb\045\uffeb\046\uffeb\047\uffeb\001\002\000\014\005\ufffb" +
    "\033\013\037\010\041\007\043\006\001\002\000\004\005" +
    "\ufff9\001\002\000\006\005\ufffc\006\ufffc\001\002\000\004" +
    "\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\153\000\012\002\003\003\011\004\010\014\004\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\003\011\004\013\014\004\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\005\017\006" +
    "\020\014\016\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\023\001\001\000\004\010" +
    "\024\001\001\000\002\001\001\000\026\007\047\011\040" +
    "\014\042\016\027\017\030\020\033\021\034\022\035\023" +
    "\037\024\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\027\134\001\001\000\004\026\127" +
    "\001\001\000\004\030\113\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\012\100\013\102\001\001\000\004\016\077\001\001\000" +
    "\004\016\076\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\016\027\017\030\020\033\021" +
    "\034\022\035\023\037\024\074\001\001\000\020\016\027" +
    "\017\030\020\033\021\034\022\035\023\037\024\072\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\016\027" +
    "\017\030\020\033\021\034\022\035\023\037\024\055\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\016\027" +
    "\017\030\020\033\021\034\022\035\023\037\024\060\025" +
    "\061\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\016\027\017\030\020\033\021\034\022" +
    "\035\023\037\024\060\025\064\001\001\000\002\001\001" +
    "\000\026\007\047\011\066\014\042\016\027\017\030\020" +
    "\033\021\034\022\035\023\037\024\041\001\001\000\002" +
    "\001\001\000\026\007\047\011\070\014\042\016\027\017" +
    "\030\020\033\021\034\022\035\023\037\024\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\016\027" +
    "\017\030\020\033\021\034\022\035\023\037\024\105\001" +
    "\001\000\002\001\001\000\006\012\100\013\107\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\016\027\017" +
    "\030\020\033\021\034\022\035\023\037\024\112\001\001" +
    "\000\002\001\001\000\012\016\027\017\030\020\033\021" +
    "\124\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\016\027\017\030\020\033\021\034\022\035" +
    "\023\123\001\001\000\002\001\001\000\004\026\127\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\016\027" +
    "\017\030\020\130\001\001\000\004\027\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\027\017\135\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\016\027\017\030\020\033" +
    "\021\034\022\035\023\037\024\141\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\016\027\017\030\020\033\021\034\022\035\023" +
    "\037\024\146\001\001\000\002\001\001\000\026\007\047" +
    "\011\150\014\042\016\027\017\030\020\033\021\034\022" +
    "\035\023\037\024\041\001\001\000\002\001\001\000\010" +
    "\005\017\006\152\014\016\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public latte_lang.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (latte_lang.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Program start_val = (latte_lang.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListTopDef 
            {
              latte_lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListTopDef p_1 = (latte_lang.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Prog(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Prog)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Prog)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Prog)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Prog)RESULT).line_num = -1;
  ((latte_lang.Absyn.Prog)RESULT).col_num = -1;
  ((latte_lang.Absyn.Prog)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // TopDef ::= Type _IDENT_ _SYMB_0 ListArg _SYMB_1 Block 
            {
              latte_lang.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		latte_lang.Absyn.Type p_1 = (latte_lang.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.ListArg p_4 = (latte_lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Block p_6 = (latte_lang.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.FnDef(p_1,p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.FnDef)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.FnDef)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.FnDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.FnDef)RESULT).line_num = -1;
  ((latte_lang.Absyn.FnDef)RESULT).col_num = -1;
  ((latte_lang.Absyn.FnDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ListTopDef ::= TopDef 
            {
              latte_lang.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.TopDef p_1 = (latte_lang.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ListTopDef(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ListTopDef ::= TopDef ListTopDef 
            {
              latte_lang.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.TopDef p_1 = (latte_lang.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListTopDef p_2 = (latte_lang.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Arg ::= Type _IDENT_ 
            {
              latte_lang.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Type p_1 = (latte_lang.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Ar(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Ar)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Ar)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Ar)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Ar)RESULT).line_num = -1;
  ((latte_lang.Absyn.Ar)RESULT).col_num = -1;
  ((latte_lang.Absyn.Ar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ListArg ::= 
            {
              latte_lang.Absyn.ListArg RESULT =null;
		 RESULT = new latte_lang.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ListArg ::= Arg 
            {
              latte_lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Arg p_1 = (latte_lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ListArg ::= Arg _SYMB_2 ListArg 
            {
              latte_lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Arg p_1 = (latte_lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListArg p_3 = (latte_lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Block ::= _SYMB_3 ListStmt _SYMB_4 
            {
              latte_lang.Absyn.Block RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.ListStmt p_2 = (latte_lang.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Blk(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Blk)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Blk)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Blk)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Blk)RESULT).line_num = -1;
  ((latte_lang.Absyn.Blk)RESULT).col_num = -1;
  ((latte_lang.Absyn.Blk)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Block",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ListStmt ::= 
            {
              latte_lang.Absyn.ListStmt RESULT =null;
		 RESULT = new latte_lang.Absyn.ListStmt(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ListStmt ::= ListStmt Stmt 
            {
              latte_lang.Absyn.ListStmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.ListStmt p_1 = (latte_lang.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Stmt p_2 = (latte_lang.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Stmt ::= _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Empty();
((latte_lang.Absyn.Empty)RESULT).line_num = -1;
((latte_lang.Absyn.Empty)RESULT).col_num = -1;
((latte_lang.Absyn.Empty)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Stmt ::= Block 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Block p_1 = (latte_lang.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.BStmt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.BStmt)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.BStmt)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.BStmt)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.BStmt)RESULT).line_num = -1;
  ((latte_lang.Absyn.BStmt)RESULT).col_num = -1;
  ((latte_lang.Absyn.BStmt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Stmt ::= Type ListItem _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Type p_1 = (latte_lang.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.ListItem p_2 = (latte_lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Decl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Decl)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Decl)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Decl)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Decl)RESULT).line_num = -1;
  ((latte_lang.Absyn.Decl)RESULT).col_num = -1;
  ((latte_lang.Absyn.Decl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Stmt ::= _IDENT_ _SYMB_6 Expr _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Ass(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Ass)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Ass)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Ass)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Ass)RESULT).line_num = -1;
  ((latte_lang.Absyn.Ass)RESULT).col_num = -1;
  ((latte_lang.Absyn.Ass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Stmt ::= _IDENT_ _SYMB_7 _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Incr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Incr)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Incr)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Incr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Incr)RESULT).line_num = -1;
  ((latte_lang.Absyn.Incr)RESULT).col_num = -1;
  ((latte_lang.Absyn.Incr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stmt ::= _IDENT_ _SYMB_8 _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Decr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Decr)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Decr)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Decr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Decr)RESULT).line_num = -1;
  ((latte_lang.Absyn.Decr)RESULT).col_num = -1;
  ((latte_lang.Absyn.Decr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stmt ::= _SYMB_28 Expr _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Expr p_2 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Ret(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Ret)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Ret)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Ret)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Ret)RESULT).line_num = -1;
  ((latte_lang.Absyn.Ret)RESULT).col_num = -1;
  ((latte_lang.Absyn.Ret)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stmt ::= _SYMB_28 _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.VRet();
((latte_lang.Absyn.VRet)RESULT).line_num = -1;
((latte_lang.Absyn.VRet)RESULT).col_num = -1;
((latte_lang.Absyn.VRet)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stmt ::= _SYMB_26 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Stmt p_5 = (latte_lang.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Cond(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Cond)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Cond)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Cond)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Cond)RESULT).line_num = -1;
  ((latte_lang.Absyn.Cond)RESULT).col_num = -1;
  ((latte_lang.Absyn.Cond)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stmt ::= _SYMB_26 _SYMB_0 Expr _SYMB_1 Stmt _SYMB_24 Stmt 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Stmt p_5 = (latte_lang.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Stmt p_7 = (latte_lang.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.CondElse(p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.CondElse)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.CondElse)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.CondElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.CondElse)RESULT).line_num = -1;
  ((latte_lang.Absyn.CondElse)RESULT).col_num = -1;
  ((latte_lang.Absyn.CondElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stmt ::= _SYMB_32 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Stmt p_5 = (latte_lang.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.While(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.While)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.While)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.While)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.While)RESULT).line_num = -1;
  ((latte_lang.Absyn.While)RESULT).col_num = -1;
  ((latte_lang.Absyn.While)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stmt ::= Expr _SYMB_5 
            {
              latte_lang.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.SExp(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.SExp)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.SExp)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.SExp)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.SExp)RESULT).line_num = -1;
  ((latte_lang.Absyn.SExp)RESULT).col_num = -1;
  ((latte_lang.Absyn.SExp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Item ::= _IDENT_ 
            {
              latte_lang.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.NoInit(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.NoInit)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.NoInit)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.NoInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.NoInit)RESULT).line_num = -1;
  ((latte_lang.Absyn.NoInit)RESULT).col_num = -1;
  ((latte_lang.Absyn.NoInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Item ::= _IDENT_ _SYMB_6 Expr 
            {
              latte_lang.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Init(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Init)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Init)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Init)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Init)RESULT).line_num = -1;
  ((latte_lang.Absyn.Init)RESULT).col_num = -1;
  ((latte_lang.Absyn.Init)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ListItem ::= Item 
            {
              latte_lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Item p_1 = (latte_lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ListItem ::= Item _SYMB_2 ListItem 
            {
              latte_lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Item p_1 = (latte_lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListItem p_3 = (latte_lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Type ::= _SYMB_27 
            {
              latte_lang.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Int();
((latte_lang.Absyn.Int)RESULT).line_num = -1;
((latte_lang.Absyn.Int)RESULT).col_num = -1;
((latte_lang.Absyn.Int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Type ::= _SYMB_29 
            {
              latte_lang.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Str();
((latte_lang.Absyn.Str)RESULT).line_num = -1;
((latte_lang.Absyn.Str)RESULT).col_num = -1;
((latte_lang.Absyn.Str)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Type ::= _SYMB_23 
            {
              latte_lang.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Bool();
((latte_lang.Absyn.Bool)RESULT).line_num = -1;
((latte_lang.Absyn.Bool)RESULT).col_num = -1;
((latte_lang.Absyn.Bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Type ::= _SYMB_31 
            {
              latte_lang.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Void();
((latte_lang.Absyn.Void)RESULT).line_num = -1;
((latte_lang.Absyn.Void)RESULT).col_num = -1;
((latte_lang.Absyn.Void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Type",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ListType ::= 
            {
              latte_lang.Absyn.ListType RESULT =null;
		 RESULT = new latte_lang.Absyn.ListType(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ListType ::= Type 
            {
              latte_lang.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Type p_1 = (latte_lang.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ListType(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ListType ::= Type _SYMB_2 ListType 
            {
              latte_lang.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Type p_1 = (latte_lang.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListType p_3 = (latte_lang.Absyn.ListType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Expr6 ::= _IDENT_ 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EVar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EVar)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EVar)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EVar)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EVar)RESULT).line_num = -1;
  ((latte_lang.Absyn.EVar)RESULT).col_num = -1;
  ((latte_lang.Absyn.EVar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Expr6 ::= _INTEGER_ 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ELitInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.ELitInt)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.ELitInt)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.ELitInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.ELitInt)RESULT).line_num = -1;
  ((latte_lang.Absyn.ELitInt)RESULT).col_num = -1;
  ((latte_lang.Absyn.ELitInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Expr6 ::= _SYMB_30 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ELitTrue();
((latte_lang.Absyn.ELitTrue)RESULT).line_num = -1;
((latte_lang.Absyn.ELitTrue)RESULT).col_num = -1;
((latte_lang.Absyn.ELitTrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Expr6 ::= _SYMB_25 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ELitFalse();
((latte_lang.Absyn.ELitFalse)RESULT).line_num = -1;
((latte_lang.Absyn.ELitFalse)RESULT).col_num = -1;
((latte_lang.Absyn.ELitFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Expr6 ::= _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.ListExpr p_3 = (latte_lang.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EApp(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EApp)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EApp)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EApp)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EApp)RESULT).line_num = -1;
  ((latte_lang.Absyn.EApp)RESULT).col_num = -1;
  ((latte_lang.Absyn.EApp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Expr6 ::= _STRING_ 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EString)RESULT).line_num = -1;
  ((latte_lang.Absyn.EString)RESULT).col_num = -1;
  ((latte_lang.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Expr6 ::= _SYMB_0 Expr _SYMB_1 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.Expr p_2 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Expr5 ::= _SYMB_9 Expr6 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_2 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Neg(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Neg)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Neg)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Neg)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Neg)RESULT).line_num = -1;
  ((latte_lang.Absyn.Neg)RESULT).col_num = -1;
  ((latte_lang.Absyn.Neg)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Expr5 ::= _SYMB_10 Expr6 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_2 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Not(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.Not)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.Not)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.Not)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.Not)RESULT).line_num = -1;
  ((latte_lang.Absyn.Not)RESULT).col_num = -1;
  ((latte_lang.Absyn.Not)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Expr5 ::= Expr6 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Expr4 ::= Expr4 MulOp Expr5 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.MulOp p_2 = (latte_lang.Absyn.MulOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EMul(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EMul)RESULT).line_num = -1;
  ((latte_lang.Absyn.EMul)RESULT).col_num = -1;
  ((latte_lang.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Expr4 ::= Expr5 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Expr3 ::= Expr3 AddOp Expr4 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.AddOp p_2 = (latte_lang.Absyn.AddOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EAdd(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EAdd)RESULT).line_num = -1;
  ((latte_lang.Absyn.EAdd)RESULT).col_num = -1;
  ((latte_lang.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Expr3 ::= Expr4 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Expr2 ::= Expr2 RelOp Expr3 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		latte_lang.Absyn.RelOp p_2 = (latte_lang.Absyn.RelOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ERel(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.ERel)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.ERel)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.ERel)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.ERel)RESULT).line_num = -1;
  ((latte_lang.Absyn.ERel)RESULT).col_num = -1;
  ((latte_lang.Absyn.ERel)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Expr2 ::= Expr3 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Expr1 ::= Expr2 _SYMB_11 Expr1 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EAnd)RESULT).line_num = -1;
  ((latte_lang.Absyn.EAnd)RESULT).col_num = -1;
  ((latte_lang.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Expr1 ::= Expr2 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Expr ::= Expr1 _SYMB_12 Expr 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_3 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((latte_lang.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((latte_lang.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((latte_lang.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((latte_lang.Absyn.EOr)RESULT).line_num = -1;
  ((latte_lang.Absyn.EOr)RESULT).col_num = -1;
  ((latte_lang.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Expr ::= Expr1 
            {
              latte_lang.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ListExpr ::= 
            {
              latte_lang.Absyn.ListExpr RESULT =null;
		 RESULT = new latte_lang.Absyn.ListExpr(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ListExpr ::= Expr 
            {
              latte_lang.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.ListExpr(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ListExpr ::= Expr _SYMB_2 ListExpr 
            {
              latte_lang.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		latte_lang.Absyn.Expr p_1 = (latte_lang.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		latte_lang.Absyn.ListExpr p_3 = (latte_lang.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // AddOp ::= _SYMB_13 
            {
              latte_lang.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Plus();
((latte_lang.Absyn.Plus)RESULT).line_num = -1;
((latte_lang.Absyn.Plus)RESULT).col_num = -1;
((latte_lang.Absyn.Plus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // AddOp ::= _SYMB_9 
            {
              latte_lang.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Minus();
((latte_lang.Absyn.Minus)RESULT).line_num = -1;
((latte_lang.Absyn.Minus)RESULT).col_num = -1;
((latte_lang.Absyn.Minus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // MulOp ::= _SYMB_14 
            {
              latte_lang.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Times();
((latte_lang.Absyn.Times)RESULT).line_num = -1;
((latte_lang.Absyn.Times)RESULT).col_num = -1;
((latte_lang.Absyn.Times)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // MulOp ::= _SYMB_15 
            {
              latte_lang.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Div();
((latte_lang.Absyn.Div)RESULT).line_num = -1;
((latte_lang.Absyn.Div)RESULT).col_num = -1;
((latte_lang.Absyn.Div)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // MulOp ::= _SYMB_16 
            {
              latte_lang.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.Mod();
((latte_lang.Absyn.Mod)RESULT).line_num = -1;
((latte_lang.Absyn.Mod)RESULT).col_num = -1;
((latte_lang.Absyn.Mod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // RelOp ::= _SYMB_17 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.LTH();
((latte_lang.Absyn.LTH)RESULT).line_num = -1;
((latte_lang.Absyn.LTH)RESULT).col_num = -1;
((latte_lang.Absyn.LTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // RelOp ::= _SYMB_18 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.LE();
((latte_lang.Absyn.LE)RESULT).line_num = -1;
((latte_lang.Absyn.LE)RESULT).col_num = -1;
((latte_lang.Absyn.LE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // RelOp ::= _SYMB_19 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.GTH();
((latte_lang.Absyn.GTH)RESULT).line_num = -1;
((latte_lang.Absyn.GTH)RESULT).col_num = -1;
((latte_lang.Absyn.GTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // RelOp ::= _SYMB_20 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.GE();
((latte_lang.Absyn.GE)RESULT).line_num = -1;
((latte_lang.Absyn.GE)RESULT).col_num = -1;
((latte_lang.Absyn.GE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // RelOp ::= _SYMB_21 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.EQU();
((latte_lang.Absyn.EQU)RESULT).line_num = -1;
((latte_lang.Absyn.EQU)RESULT).col_num = -1;
((latte_lang.Absyn.EQU)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // RelOp ::= _SYMB_22 
            {
              latte_lang.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new latte_lang.Absyn.NE();
((latte_lang.Absyn.NE)RESULT).line_num = -1;
((latte_lang.Absyn.NE)RESULT).col_num = -1;
((latte_lang.Absyn.NE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
